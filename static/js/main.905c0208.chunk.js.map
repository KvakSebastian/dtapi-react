{"version":3,"sources":["common/guards/ProtectedRoute.js","environments/environment.js","common/utils.js","components/login/Login.js","components/login/index.js","common/guards/LoginRoute.js","common/navUtils.js","components/admin/AdminNavItem.js","components/admin/speciality/SpecialityAddDialog.js","components/admin/speciality/SpecialityViewList.js","components/admin/speciality/index.js","components/admin/speciality/SpecialityView.js","components/admin/dashboard/DashboardCard.js","components/admin/dashboard/DashboardService.js","components/admin/dashboard/DashboardGrid.js","components/admin/dashboard/index.js","components/admin/groups/GroupAddDialog.jsx","components/admin/groups/ConfirmDelete.jsx","components/admin/groups/GroupRow.jsx","components/admin/groups/index.js","components/admin/groups/Groups.jsx","components/admin/AdminPanel.js","App.js","reportWebVitals.js","index.js"],"names":["ProtectedRoute","Component","component","path","authInfo","setAuthInfo","render","props","data","roles","includes","to","pathname","state","from","location","response","environment","addEntity","entity","payload","axios","post","deleteEntity","id","get","getEntityData","source","cancelToken","token","updateEntity","isLogged","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","classes","validationSchema","Yup","name","required","password","submitHandler","value","a","logInfo","username","body","isAuth","Container","maxWidth","CssBaseline","className","Avatar","Typography","variant","initialValues","onSubmit","validateOnMount","noValidate","handleSubmit","TextField","fullWidth","label","values","onBlur","handleBlur","onChange","handleChange","helperText","touched","errors","error","Boolean","type","Button","disabled","isValid","color","LoginRoute","navList","icon","Dashboard","title","AccountBalance","Group","Dns","CollectionsBookmark","InsertChartSharp","SupervisedUserCircle","MainListItems","style","exact","activeClassName","ListItem","ListItemIcon","ListItemText","primary","SpecialityAddDialig","open","setOpen","speciality","setEdit","setSpecialityDate","specialityDates","speciality_name","code","speciality_code","max","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","speciality_id","then","res","updatedList","map","item","updateSpeciality","catch","e","addSpeciality","autoFocus","textAlign","onClick","SpecialityViewList","useState","edit","TableRow","TableCell","newArray","filter","Speciality","page","setPage","rowsPerPage","setRowsPerPage","useEffect","CancelToken","specialityDate","fetchData","cancel","justifyContent","boxShadow","Table","stickyHeader","aria-label","TableHead","column","TableBody","slice","TablePagination","rowsPerPageOptions","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","DashboardCard","card","Card","hasCount","CardMedia","alt","image","FacultiesNumber","GroupsNumber","SpecialitiesNumber","SubjectsNumber","StudentsNumber","AdminsNumber","result","all","createCardData","DashboardGrid","loaded","setLoad","cards","setCards","getNumberOfRecords","counts","undefined","numberOfRecords","index","CircularProgress","GroupAddDialog","group","specialityData","facultyData","setGroupsData","groupsData","group_name","faculty_name","getSpecName","param","getFacName","faculty_id","getSpecId","getFacId","console","log","group_id","updateGroup","addGroup","Select","displayEmpty","MenuItem","uuidv4","ConfirmDelete","setShowDelDialog","DialogContentText","DialogActions","GroupRow","groupData","showDialog","setShowDialog","openDel","setOpenDel","showDelDialog","Groups","setFacultyData","setSpecialityData","requests","Promise","specialities","faculties","forEach","push","newData","genereteTableData","elem","gutterBottom","root","toolbar","paddingRight","toolbarIcon","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","contentBlock","AdminPanel","React","logoutHandle","AppBar","clsx","Toolbar","IconButton","edge","noWrap","ExitToApp","Drawer","HomeOutlined","Divider","List","DashboardCards","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.905c0208.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nconst ProtectedRoute = ({ component: Component, path, authInfo, setAuthInfo }) => {\n    return (\n        <Route\n            render={(props) => {\n                if (authInfo.data?.roles) {\n                    const goTo = authInfo.data.roles.includes('admin');\n                    if (goTo) {\n                        return <Component setAuthInfo={setAuthInfo} path={path} {...props} />;\n                    } else {\n                        return (\n                            <Redirect\n                                to={{\n                                    pathname: '/student',\n                                    state: { from: props.location },\n                                }}\n                            />\n                        );\n                    }\n                } else if (authInfo.data?.response === 'non logged') {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: '/login',\n                                state: { from: props.location },\n                            }}\n                        />\n                    );\n                }\n            }}\n        />\n    );\n};\nexport default ProtectedRoute;\n","export const environment = {\n    production: false,\n    BASEURL: 'https://dtapi.if.ua/api/',\n};\n","import axios from 'axios';\nimport { environment } from '../environments/environment';\n\nexport const addEntity = (entity, payload) => {\n    return axios.post(`${environment.BASEURL}${entity}/insertData`, payload);\n};\nexport const deleteEntity = (entity, id) => {\n    return axios.get(`${environment.BASEURL}${entity}/del/${id}`);\n};\nexport const login = (body) => {\n    return axios.post(`${environment.BASEURL}login/index`, body);\n};\nexport const getEntityData = (entity, source) => {\n    return axios.get(`${environment.BASEURL}${entity}/getRecords/`, {\n        cancelToken: source.token,\n    });\n};\nexport const updateEntity = (entity, id, payload) => {\n    return axios.post(`${environment.BASEURL}${entity}/update/${id}`, payload);\n};\n\nexport const isLogged = () => {\n    return axios.get(`${environment.BASEURL}login/isLogged`);\n};\n\nexport const logOut = () => {\n    return axios.get(`${environment.BASEURL}login/logout`);\n};\n","import React from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { isLogged, login } from '../../common/utils';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Login = ({ setAuthInfo }) => {\n    const classes = useStyles();\n\n    const initialValues = {\n        name: '',\n        password: '',\n    };\n    const validationSchema = Yup.object({\n        name: Yup.string().required(`Обов'язкове поле`),\n        password: Yup.string().required(`Обов'язкове поле`),\n    });\n    const submitHandler = async (value) => {\n        const logInfo = { username: value.name, password: value.password };\n        await login(logInfo);\n        const isAuth = await isLogged();\n        setAuthInfo(isAuth);\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log in\n                </Typography>\n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    onSubmit={submitHandler}\n                    validateOnMount={true}\n                >\n                    {(props) => (\n                        <form className={classes.form} noValidate onSubmit={props.handleSubmit}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"name\"\n                                label=\"Name\"\n                                name=\"name\"\n                                value={props.values.name}\n                                onBlur={props.handleBlur}\n                                onChange={props.handleChange}\n                                helperText={props.touched.name ? props.errors.name : ''}\n                                error={props.touched.name && Boolean(props.errors.name)}\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                onBlur={props.handleBlur}\n                                value={props.values.password}\n                                onChange={props.handleChange}\n                                helperText={props.touched.password ? props.errors.password : ''}\n                                error={props.touched.password && Boolean(props.errors.password)}\n                            />\n\n                            <Button\n                                disabled={!props.isValid}\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Log In\n                            </Button>\n                        </form>\n                    )}\n                </Formik>\n            </div>\n        </Container>\n    );\n};\n\nexport default Login;\n","import Login from './Login';\nexport default Login;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nconst LoginRoute = ({ component: Component, path, authInfo, setAuthInfo }) => {\n    return (\n        <Route\n            render={(props) => {\n                if (authInfo.data?.response === 'non logged') {\n                    return <Component setAuthInfo={setAuthInfo} path={path} {...props} />;\n                } else if (authInfo.data?.roles) {\n                    const goTo = authInfo.data.roles.includes('admin');\n                    if (goTo) {\n                        return (\n                            <Redirect\n                                to={{\n                                    pathname: '/admin/dashboard',\n                                    state: { from: props.location },\n                                }}\n                            />\n                        );\n                    } else {\n                        return (\n                            <Redirect\n                                to={{\n                                    pathname: '/student',\n                                    state: { from: props.location },\n                                }}\n                            />\n                        );\n                    }\n                }\n            }}\n        />\n    );\n};\nexport default LoginRoute;\n","import {\n    AccountBalance,\n    CollectionsBookmark,\n    Dashboard,\n    Dns,\n    Group,\n    InsertChartSharp,\n    SupervisedUserCircle,\n} from '@material-ui/icons';\n\nexport const navList = [\n    {\n        path: '/admin/dashboard',\n        icon: () => <Dashboard />,\n        title: 'Головна',\n    },\n    {\n        path: '/admin/faculties',\n        icon: () => <AccountBalance />,\n        title: 'Факультети',\n    },\n    {\n        path: '/admin/group',\n        icon: () => <Group />,\n        title: 'Групи',\n    },\n    {\n        path: '/admin/speciality',\n        icon: () => <Dns />,\n        title: 'Спеціальності',\n    },\n    {\n        path: '/admin/subjects',\n        icon: () => <CollectionsBookmark />,\n        title: 'Предмети',\n    },\n    {\n        path: '/admin/results',\n        icon: () => <InsertChartSharp />,\n        title: 'Результати',\n    },\n    {\n        path: '/admin/admins',\n        icon: () => <SupervisedUserCircle />,\n        title: 'Адміни',\n    },\n];\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { NavLink } from 'react-router-dom';\n\nimport '../../App.css';\n\nexport const MainListItems = ({ path, icon, title }) => {\n    return (\n        <NavLink to={path} style={{ color: 'black' }} exact activeClassName=\"active\">\n            <ListItem>\n                <ListItemIcon>{icon()}</ListItemIcon>\n                <ListItemText primary={title} />\n            </ListItem>\n        </NavLink>\n    );\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Formik } from 'formik';\nimport { addEntity, updateEntity } from '../../../common/utils';\n\nimport * as Yup from 'yup';\n\nconst SpecialityAddDialig = ({\n    open,\n    setOpen,\n    speciality,\n    setEdit,\n    setSpecialityDate,\n    specialityDates,\n}) => {\n    const initialValues = {\n        name: speciality ? speciality.speciality_name : '',\n        code: speciality ? speciality.speciality_code : '',\n    };\n\n    const validationSchema = Yup.object({\n        name: Yup.string().required('Заповни поле'),\n        code: Yup.string().required('Заповни поле').max(5, 'Максимум 5 чисел'),\n    });\n    const handleClose = () => {\n        speciality ? setEdit(false) : setOpen(false);\n    };\n    const updateSpeciality = (data) => {\n        updateEntity('Speciality', speciality.speciality_id, {\n            speciality_name: data.name,\n            speciality_code: data.code,\n        }).then((res) => {\n            const updatedList = specialityDates.map((item) =>\n                res.data[0].speciality_id === item.speciality_id ? res.data[0] : item,\n            );\n            setSpecialityDate(updatedList);\n            setEdit(false);\n        });\n    };\n    const addSpeciality = (data) => {\n        addEntity('Speciality', {\n            speciality_name: data.name,\n            speciality_code: data.code,\n        })\n            .then((res) => {\n                setSpecialityDate([...specialityDates, res.data[0]]);\n                setOpen(false);\n            })\n            .catch((e) => {});\n    };\n    return (\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">\n                {speciality ? 'Редагувати спеціальність' : 'Додати спеціальність'}\n            </DialogTitle>\n            <DialogContent>\n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    validateOnMount={true}\n                    onSubmit={(data) => {\n                        speciality ? updateSpeciality(data) : addSpeciality(data);\n                    }}\n                >\n                    {({\n                        isValid,\n                        errors,\n                        touched,\n                        values,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                    }) => (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                name=\"name\"\n                                value={values.name}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"Name\"\n                                type=\"text\"\n                                fullWidth\n                                helperText={touched.name ? errors.name : ''}\n                                error={touched.name && Boolean(errors.name)}\n                            />\n\n                            <TextField\n                                name=\"code\"\n                                value={values.code}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                margin=\"dense\"\n                                id=\"code\"\n                                label=\"Code\"\n                                type=\"text\"\n                                fullWidth\n                                helperText={touched.code ? errors.code : ''}\n                                error={touched.code && Boolean(errors.code)}\n                            />\n                            <div style={{ margin: '1rem', textAlign: 'center' }}>\n                                <Button onClick={handleClose} color=\"primary\">\n                                    Відмінити\n                                </Button>\n                                <Button disabled={!isValid} type=\"submit\" color=\"primary\">\n                                    {speciality ? 'Редагувати' : 'Додати'}\n                                </Button>\n                            </div>\n                        </form>\n                    )}\n                </Formik>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nexport default SpecialityAddDialig;\n","import React, { useState } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport SpecialityAddDialig from './SpecialityAddDialog';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Button } from '@material-ui/core';\nimport { deleteEntity } from '../../../common/utils';\n\nconst SpecialityViewList = ({ speciality, setOpen, setSpecialityDate, specialityDates }) => {\n    const { speciality_name, speciality_code, speciality_id } = speciality;\n    const [edit, setEdit] = useState(false);\n    const editSpecialityHandler = () => {\n        setEdit(true);\n    };\n    const deleteSpecialityHandler = () => {\n        deleteEntity('Speciality', speciality_id).then((res) => {\n            if (res.data.response === 'ok') {\n                const newArray = specialityDates.filter(\n                    (item) => item.speciality_id !== speciality_id,\n                );\n                setSpecialityDate(newArray);\n            }\n        });\n    };\n    return (\n        <TableRow>\n            <TableCell>{speciality_id}</TableCell>\n            <TableCell>{speciality_name}</TableCell>\n            <TableCell>{speciality_code}</TableCell>\n            <TableCell>\n                <div>\n                    <Button color=\"primary\" onClick={editSpecialityHandler}>\n                        <EditIcon />\n                    </Button>\n                    <Button color=\"primary\" onClick={deleteSpecialityHandler}>\n                        <DeleteIcon />\n                    </Button>\n                </div>\n            </TableCell>\n\n            <SpecialityAddDialig\n                open={edit}\n                setSpecialityDate={setSpecialityDate}\n                setOpen={setOpen}\n                specialityDates={specialityDates}\n                speciality={speciality}\n                setEdit={setEdit}\n            />\n        </TableRow>\n    );\n};\nexport default SpecialityViewList;\n","import Speciality from './SpecialityView';\nexport default Speciality;\n","import React, { useEffect, useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport TableHead from '@material-ui/core/TableHead';\nimport { Button } from '@material-ui/core';\n\nimport TableRow from '@material-ui/core/TableRow';\nimport SpecialityViewList from './SpecialityViewList';\nimport SpecialityAddDialig from './SpecialityAddDialog';\n\nimport { getEntityData } from '../../../common/utils';\nimport axios from 'axios';\n\nconst SpecialityView = () => {\n    const [specialityDates, setSpecialityDate] = useState([]);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [open, setOpen] = useState(false);\n\n    const headerName = ['ID', 'Спеціальність', 'Код', 'Дія'];\n\n    useEffect(() => {\n        const source = axios.CancelToken.source();\n        async function fetchData() {\n            const specialityDate = await getEntityData('Speciality', source);\n            setSpecialityDate(specialityDate.data);\n        }\n\n        fetchData();\n        return () => {\n            source.cancel();\n        };\n    }, []);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const styles = {\n        btn: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            margin: '1rem',\n        },\n    };\n    const dialogOpenHandler = () => {\n        setOpen(true);\n    };\n\n    return (\n        <div>\n            <div style={styles.btn}>\n                <h2>Спеціальності</h2>\n                <Button onClick={dialogOpenHandler} variant=\"contained\" color=\"primary\">\n                    Добавити спеціальність\n                </Button>\n            </div>\n            <div style={{ boxShadow: '0.5rem 1rem 2rem gray' }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {headerName.map((column) => (\n                                <TableCell key={column + 1}>{column}</TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {specialityDates\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((speciality) => (\n                                <SpecialityViewList\n                                    speciality={speciality}\n                                    key={speciality.speciality_id}\n                                    setOpen={setOpen}\n                                    open={open}\n                                    specialityDates={specialityDates}\n                                    setSpecialityDate={setSpecialityDate}\n                                />\n                            ))}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={specialityDates.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </div>\n            <SpecialityAddDialig\n                specialityDates={specialityDates}\n                setSpecialityDate={setSpecialityDate}\n                setOpen={setOpen}\n                open={open}\n            />\n        </div>\n    );\n};\nexport default SpecialityView;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Link } from 'react-router-dom';\n\nimport './Dashboard.css';\nfunction DashboardCard({ card }) {\n    return (\n        <Card className=\"card\">\n            <Link to={card.path} className=\"card-link\"></Link>\n            {card.hasCount ? <span className=\"card-count\">{card.count}</span> : null}\n            <CardMedia\n                component=\"img\"\n                alt={card.title}\n                image={card.image}\n                title={card.title}\n                className=\"card-image\"\n            />\n            <h2 className=\"card-title\">{card.title}</h2>\n            <div className=\"card_hover\">\n                <h3>Перейти</h3>\n            </div>\n        </Card>\n    );\n}\n\nexport default DashboardCard;\n","import axios from 'axios';\nimport { environment } from '../../../environments/environment';\n// import SnackbarHandler from \"../../../common/snackbar\";\n\nexport async function getNumberOfRecords() {\n    const FacultiesNumber = await axios\n        .get(`${environment.BASEURL}Faculty/countRecords`)\n        .then((res) => res.data);\n    const GroupsNumber = await axios\n        .get(`${environment.BASEURL}Group/countRecords`)\n        .then((res) => res.data);\n    const SpecialitiesNumber = await axios\n        .get(`${environment.BASEURL}Speciality/countRecords`)\n        .then((res) => res.data);\n    const SubjectsNumber = await axios\n        .get(`${environment.BASEURL}Subject/countRecords`)\n        .then((res) => res.data);\n    const StudentsNumber = await axios\n        .get(`${environment.BASEURL}Student/countRecords`)\n        .then((res) => res.data);\n    const AdminsNumber = await axios\n        .get(`${environment.BASEURL}AdminUser/countRecords`)\n        .then((res) => res.data);\n\n    const result = axios\n        .all([\n            FacultiesNumber,\n            GroupsNumber,\n            SpecialitiesNumber,\n            SubjectsNumber,\n            StudentsNumber,\n            AdminsNumber,\n        ])\n        .then((res) => res);\n    // .catch((err) => SnackbarHandler(err.message, \"error\"));\n    return result;\n}\n\nexport function createCardData(title, path, component, hasCount, count = 0, image) {\n    return {\n        title,\n        path,\n        component,\n        hasCount,\n        count,\n        image,\n    };\n}\n\nexport function createCardsArray(counts) {\n    if (counts !== undefined) {\n        const cards = [\n            createCardData(\n                'Факультети',\n                '/admin/faculties',\n                'Faculty',\n                true,\n                counts[0].numberOfRecords,\n                'https://www.sandhills.edu/wp-content/uploads/2019/03/classroom.jpg',\n            ),\n            createCardData(\n                'Групи',\n                '/admin/group',\n                'Groups',\n                true,\n                counts[1].numberOfRecords,\n                'https://skilledwork.org/wp-content/uploads/2014/01/1105572-medium.jpg',\n            ),\n            createCardData(\n                'Спеціальності',\n                '/admin/speciality',\n                'Speciality',\n                true,\n                counts[2].numberOfRecords,\n                'https://prontomarketing.pi.bypronto.com/3/wp-content/uploads/sites/3/2020/08/Managed-Services-Provider-e1596510425847.jpg',\n            ),\n            createCardData(\n                'Предмети',\n                '/admin/subjects',\n                'Subject',\n                true,\n                counts[3].numberOfRecords,\n                'https://nhsportpress.com/wp-content/uploads/2019/11/district-tech.jpeg',\n            ),\n            createCardData(\n                'Студенти',\n                '/admin/group',\n                'Groups',\n                true,\n                counts[4].numberOfRecords,\n                'https://www.orangeschool.com.ua/wp-content/uploads/2019/07/%D0%BA%D1%83%D1%80%D1%81%D1%8B-%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%BE%D0%B3%D0%BE.jpg',\n            ),\n            createCardData(\n                'Адміни',\n                '/admin/admins',\n                'Admins',\n                true,\n                counts[5].numberOfRecords,\n                'https://teleme.io/assets/feature_updates/tg_group_admins.jpg',\n            ),\n            createCardData(\n                'Результати',\n                'results',\n                'Results',\n                false,\n                null,\n                'https://images.hrtechnologist.com/images/uploads/content_images/how_hr_business_partners_can_translate_data_into_business_result_5e66237452fdc.png',\n            ),\n            createCardData(\n                'Протокол',\n                'protocol',\n                'Protocol',\n                false,\n                null,\n                'https://cdn.searchenginejournal.com/wp-content/uploads/2019/12/how-your-digital-agency-can-leverage-client-reports-to-prove-value-5debc3863d361-760x400.png',\n            ),\n        ];\n        return cards;\n    }\n\n    return null;\n}\n","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport DashboardCard from './DashboardCard';\nimport './Dashboard.css';\nimport { getNumberOfRecords } from './DashboardService';\nimport { createCardsArray } from './DashboardService';\n\nfunction DashboardGrid() {\n    const [loaded, setLoad] = useState(false);\n    const [cards, setCards] = useState([]);\n\n    useEffect(() => {\n        getNumberOfRecords().then((res) => {\n            setCards(createCardsArray(res));\n            if (!res) {\n                return null;\n            } else {\n                setLoad(true);\n            }\n        });\n    }, []);\n\n    return loaded ? (\n        <div className=\"cards-grid\">\n            {cards.map((item, index) => (\n                <DashboardCard card={item} key={index} />\n            ))}\n        </div>\n    ) : (\n        <div className=\"loader\">\n            <CircularProgress />\n        </div>\n    );\n}\n\nexport default DashboardGrid;\n","import DashboardGrid from './DashboardGrid';\nexport default DashboardGrid;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Formik } from 'formik';\n\nimport { addEntity, updateEntity } from '../../../common/utils';\n\nimport * as Yup from 'yup';\n\nconst GroupAddDialog = ({\n    open,\n    setOpen,\n    group,\n    specialityData,\n    facultyData,\n    setGroupsData,\n    setEdit,\n    groupsData,\n}) => {\n    const initialValues = {\n        group_name: group ? group.group_name : '',\n        faculty_name: group ? group.faculty_name : '',\n        speciality_name: group ? group.speciality_name : '',\n    };\n\n    const validationSchema = Yup.object({\n        group_name: Yup.string().required('Заповни поле'),\n        faculty_name: Yup.string().required('Заповни поле'),\n        speciality_name: Yup.string().required('Заповни поле'),\n    });\n    const handleClose = () => {\n        group ? setEdit(false) : setOpen(false);\n    };\n    const updateGroup = (data) => {\n        console.log(data);\n        updateEntity('group', group.group_id, {\n            group_name: data.group_name,\n            faculty_id: getFacId(data.faculty_name),\n            speciality_id: getSpecId(data.speciality_name),\n        }).then((res) => {\n            res.data[0] = {\n                ...res.data[0],\n                speciality_name: getSpecName(res.data[0].speciality_id),\n                faculty_name: getFacName(res.data[0].faculty_id),\n            };\n            const updatedList = groupsData.map((item) =>\n                res.data[0].group_id === item.group_id ? res.data[0] : item,\n            );\n            setGroupsData(updatedList);\n            setEdit(false);\n        });\n    };\n    const getSpecName = (param) => {\n        const currentSpec = specialityData.filter((item) => item.speciality_id === param);\n        return currentSpec[0].speciality_name;\n    };\n    const getFacName = (param) => {\n        const currentSpec = facultyData.filter((item) => item.faculty_id === param);\n        return currentSpec[0].faculty_name;\n    };\n    const getSpecId = (param) => {\n        const currentSpec = specialityData.filter((item) => item.speciality_name === param);\n        return currentSpec[0].speciality_id;\n    };\n    const getFacId = (param) => {\n        const currentSpec = facultyData.filter((item) => item.faculty_name === param);\n        return currentSpec[0].faculty_id;\n    };\n    const addGroup = (data) => {\n        console.log(data);\n        addEntity('group', {\n            group_name: data.group_name,\n            faculty_id: getFacId(data.faculty_name),\n            speciality_id: getSpecId(data.speciality_name),\n        })\n            .then((res) => {\n                res.data[0] = {\n                    ...res.data[0],\n                    speciality_name: getSpecName(res.data[0].speciality_id),\n                    faculty_name: getFacName(res.data[0].faculty_id),\n                };\n                setGroupsData([...groupsData, res.data[0]]);\n                setOpen(false);\n            })\n            .catch((e) => {});\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">\n                {group ? 'Редагувати групу' : 'Додати групу'}\n            </DialogTitle>\n            <DialogContent>\n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    validateOnMount={true}\n                    onSubmit={(data) => {\n                        group ? updateGroup(data) : addGroup(data);\n                    }}\n                >\n                    {({\n                        isValid,\n                        errors,\n                        touched,\n                        values,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                    }) => (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                name=\"group_name\"\n                                value={values.group_name}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"group_name\"\n                                label=\"Name\"\n                                type=\"text\"\n                                fullWidth\n                                error={touched.group_name && Boolean(errors.group_name)}\n                            />\n                            <Select\n                                name=\"faculty_name\"\n                                className=\"select\"\n                                value={values.faculty_name}\n                                displayEmpty\n                                key={uuidv4()}\n                                fullWidth\n                                margin=\"dense\"\n                                id=\"faculties\"\n                                label=\"faculties\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                error={touched.faculty_name && Boolean(errors.faculty_name)}\n                            >\n                                <MenuItem key={uuidv4()} value={values.faculty_name}>\n                                    {values.faculty_name}\n                                </MenuItem>\n                                {facultyData.map((item) => (\n                                    <MenuItem key={uuidv4()} value={`${item.faculty_name}`}>\n                                        {item.faculty_name}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            <Select\n                                name=\"speciality_name\"\n                                className=\"select\"\n                                value={values.speciality_name}\n                                displayEmpty\n                                key={uuidv4()}\n                                fullWidth\n                                margin=\"dense\"\n                                id=\"specialities\"\n                                label=\"specialities\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                error={touched.faculty_name && Boolean(errors.faculty_name)}\n                            >\n                                <MenuItem key={uuidv4()} value={values.speciality_name}>\n                                    {values.speciality_name}\n                                </MenuItem>\n                                {specialityData.map((item) => (\n                                    <MenuItem key={uuidv4()} value={`${item.speciality_name}`}>\n                                        {item.speciality_name}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            <div style={{ margin: '1rem', textAlign: 'center' }}>\n                                <Button onClick={handleClose} color=\"primary\">\n                                    Відмінити\n                                </Button>\n                                <Button disabled={!isValid} type=\"submit\" color=\"primary\">\n                                    {group ? 'Редагувати' : 'Додати'}\n                                </Button>\n                            </div>\n                        </form>\n                    )}\n                </Formik>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nexport default GroupAddDialog;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { deleteEntity } from '../../../common/utils';\n\nconst ConfirmDelete = ({ open, setShowDelDialog, group, groupsData, setGroupsData }) => {\n    const handleClose = () => {\n        setShowDelDialog(false);\n    };\n    const delGroup = (id) => {\n        deleteEntity('group', id).then((res) => {\n            const updatedList = groupsData.filter((item) => id !== item.group_id);\n            setGroupsData(updatedList);\n            setShowDelDialog(false);\n        });\n    };\n    return (\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"responsive-dialog-title\">\n            <DialogTitle id=\"responsive-dialog-title\">{'Підтвердіть видалення?'}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>Ви впевнені, що хочети видалити дану групу?</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleClose} color=\"primary\">\n                    Disagree\n                </Button>\n                <Button\n                    onClick={() => {\n                        handleClose();\n                        delGroup(group.group_id);\n                    }}\n                    color=\"primary\"\n                    autoFocus\n                >\n                    Agree\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ConfirmDelete;\n","import React, { useState } from 'react';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport GroupAddDialog from './GroupAddDialog';\nimport ConfirmDelete from './ConfirmDelete';\n\nconst GroupRow = ({ groupData, specialityData, facultyData, setGroupsData, groupsData }) => {\n    const [edit, setEdit] = useState(false);\n    const [showDialog, setShowDialog] = useState(false);\n    const [openDel, setOpenDel] = useState(false);\n    const [showDelDialog, setShowDelDialog] = useState(false);\n\n    const dialogOpenHandler = () => {\n        setEdit(true);\n        setShowDialog(true);\n    };\n\n    const dialogOpenDelHandler = () => {\n        setOpenDel(true);\n        setShowDelDialog(true);\n    };\n    return (\n        <TableRow key={uuidv4()}>\n            <TableCell>{groupData.group_id}</TableCell>\n            <TableCell>{groupData.group_name}</TableCell>\n            <TableCell>{groupData.speciality_name}</TableCell>\n            <TableCell>{groupData.faculty_name}</TableCell>\n            <TableCell>\n                <div>\n                    <Button color=\"primary\" onClick={dialogOpenHandler}>\n                        <EditIcon />\n                    </Button>\n                    <Button color=\"primary\" onClick={dialogOpenDelHandler}>\n                        <DeleteIcon />\n                    </Button>\n                </div>\n            </TableCell>\n            {showDialog ? (\n                <GroupAddDialog\n                    setEdit={setEdit}\n                    open={edit}\n                    specialityData={specialityData}\n                    facultyData={facultyData}\n                    setGroupsData={setGroupsData}\n                    group={groupData}\n                    groupsData={groupsData}\n                />\n            ) : null}\n            {showDelDialog ? (\n                <ConfirmDelete\n                    setEdit={setOpenDel}\n                    open={openDel}\n                    setGroupsData={setGroupsData}\n                    group={groupData}\n                    setShowDelDialog={setShowDelDialog}\n                    groupsData={groupsData}\n                />\n            ) : null}\n        </TableRow>\n    );\n};\n\nexport default GroupRow;\n","import Groups from './Groups';\nexport default Groups;\n","import React, { useEffect, useState } from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { getEntityData } from '../../../common/utils';\nimport GroupRow from './GroupRow';\n\nimport GroupAddDialog from './GroupAddDialog';\n\nimport '../../../styles/app.scss';\n\nconst Groups = () => {\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const [groupsData, setGroupsData] = useState([]);\n    const [facultyData, setFacultyData] = useState([]);\n    const [specialityData, setSpecialityData] = useState([]);\n    const [open, setOpen] = useState(false);\n\n    useEffect(() => {\n        const source = axios.CancelToken.source();\n        (async function fetchData() {\n            const requests = [\n                getEntityData('Group', source),\n                getEntityData('speciality', source),\n                getEntityData('faculty', source),\n            ];\n            const response = await Promise.all(requests);\n            let specialities = [],\n                faculties = [];\n            response[1].data.forEach((item) =>\n                specialities.push({\n                    speciality_name: item.speciality_name,\n                    speciality_id: item.speciality_id,\n                }),\n            );\n            setSpecialityData(specialities);\n            response[2].data.forEach((item) =>\n                faculties.push({ faculty_name: item.faculty_name, faculty_id: item.faculty_id }),\n            );\n            setFacultyData(faculties);\n            const newData = genereteTableData(response);\n            setGroupsData(newData);\n        })();\n        return () => {\n            source.cancel();\n        };\n    }, []);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const genereteTableData = (data) => {\n        const newData = data[0].data;\n        newData.map((item) => {\n            data[1].data.map((elem) => {\n                if (item.speciality_id === elem.speciality_id) {\n                    item.speciality_name = elem.speciality_name;\n                }\n            });\n            data[2].data.map((elem) => {\n                if (item.faculty_id === elem.faculty_id) {\n                    item.faculty_name = elem.faculty_name;\n                }\n            });\n        });\n        return newData;\n    };\n\n    const dialogOpenHandler = () => {\n        setOpen(true);\n    };\n\n    const fieldsName = ['№', 'Шифр групи', 'Спеціальність', 'Факультет', 'Дії'];\n    return (\n        <div\n            className=\"groups\"\n            style={{\n                width: '90%',\n                margin: 'auto',\n            }}\n        >\n            <div className=\"header\">\n                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                    Групи і студенти\n                </Typography>\n                <Button color=\"primary\" onClick={dialogOpenHandler}>\n                    Додати групу\n                </Button>\n            </div>\n            <div style={{ boxShadow: '0.5rem 1rem 2rem gray' }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {fieldsName.map((elem) => (\n                                <TableCell key={uuidv4()}>{elem}</TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {groupsData\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((groupData) => (\n                                <GroupRow\n                                    groupData={groupData}\n                                    key={uuidv4()}\n                                    specialityData={specialityData}\n                                    facultyData={facultyData}\n                                    setGroupsData={setGroupsData}\n                                    groupsData={groupsData}\n                                />\n                            ))}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25, 50]}\n                    component=\"div\"\n                    count={groupsData.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </div>\n            <GroupAddDialog\n                setOpen={setOpen}\n                open={open}\n                specialityData={specialityData}\n                facultyData={facultyData}\n                setGroupsData={setGroupsData}\n                groupsData={groupsData}\n            />\n        </div>\n    );\n};\n\nexport default Groups;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\n\nimport { navList } from '../../common/navUtils';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { MainListItems } from './AdminNavItem';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Block, ExitToApp, HomeOutlined } from '@material-ui/icons';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { logOut, isLogged } from '../../common/utils';\n\nimport Speciality from './speciality';\nimport DashboardCards from './dashboard';\nimport Groups from './groups';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24,\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    contentBlock: {\n        position: 'relative',\n        display: 'block',\n        width: '100%',\n        height: 'fit-content',\n        padding: theme.spacing(3),\n    },\n}));\n\nexport default function AdminPanel({ setAuthInfo }) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n\n    const logoutHandle = async () => {\n        await logOut();\n        const isAuth = await isLogged();\n        setAuthInfo(isAuth);\n    };\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"absolute\"\n                className={clsx(classes.appBar, open && classes.appBarShift)}\n            >\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"inherit\"\n                        noWrap\n                        className={classes.title}\n                    >\n                        <Link style={{ color: 'white' }} to=\"/\">\n                            D-TESTER\n                        </Link>\n                    </Typography>\n                    <IconButton color=\"inherit\" onClick={logoutHandle}>\n                        <ExitToApp />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                classes={{\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n                }}\n                open={open}\n            >\n                <div className={classes.toolbarIcon}>\n                    <Link to=\"/\">\n                        <IconButton>\n                            <HomeOutlined />\n                        </IconButton>\n                    </Link>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n                <Divider />\n                <List className=\"navBar\">\n                    {navList.map(({ path, icon, title }, index) => (\n                        <MainListItems key={index + title} path={path} icon={icon} title={title} />\n                    ))}\n                    <ListItem onClick={logoutHandle}>\n                        <ListItemIcon>\n                            <ExitToApp />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Вихід\" />\n                    </ListItem>\n                </List>\n                <Divider />\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <div className={classes.contentBlock}>\n                    <Switch>\n                        <Route path=\"/admin/speciality\" component={Speciality} />\n                    </Switch>\n                    <Switch>\n                        <Route path=\"/admin/group\" component={Groups} />\n                    </Switch>\n                    <Switch>\n                        <Route path=\"/admin/dashboard\" component={DashboardCards} />\n                    </Switch>\n                </div>\n            </main>\n        </div>\n    );\n}\n","import { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport ProtectedRoute from './common/guards/ProtectedRoute';\nimport { isLogged } from './common/utils';\nimport Login from './components/login';\nimport LoginRoute from './common/guards/LoginRoute';\nimport { useEffect, useState } from 'react';\nimport AdminPanel from './components/admin/AdminPanel';\nfunction App() {\n    const [authInfo, setAuthInfo] = useState({});\n\n    useEffect(() => {\n        async function isAuth() {\n            const res = await isLogged();\n            setAuthInfo(res);\n        }\n\n        isAuth();\n    }, []);\n\n    return (\n        <div>\n            <Switch>\n                <Redirect path=\"/\" to=\"/login\" exact />\n                <Route path=\"/student\" component={() => <h1>Hello Student</h1>} />\n                <Redirect path=\"/admin\" exact to=\"/admin/dashboard\" />\n                <ProtectedRoute\n                    authInfo={authInfo}\n                    setAuthInfo={setAuthInfo}\n                    path=\"/admin\"\n                    component={AdminPanel}\n                />\n\n                <LoginRoute\n                    setAuthInfo={setAuthInfo}\n                    authInfo={authInfo}\n                    path=\"/login\"\n                    component={Login}\n                />\n\n                <Route path=\"*\" component={() => <h1>404</h1>} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}